package ListPod::App::Lite::RSS;
use strict;
use warnings;
use Text::MicroTemplate qw(build_mt);

sub render {
    my ( $self, $args ) = @_;
    my $pos = tell DATA;
    local $/; my $t = <DATA>;
    seek DATA, $pos, 0;
    my $renderer = build_mt( $t );
    my $rss;
    eval { $rss = $renderer->( $args->{base}, $args->{playlist} )->as_string };
    return $rss;
}

1;

__DATA__
? my ($base, $playlist) = @_;
?= Text::MicroTemplate::encoded_string '<?xml version="1.0" encoding="UTF-8"?>'
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">
  <channel>
    <title><?= $playlist->{title} ?> - ListPod on <?= $base ?></title>
    <link><?= $base ?>playlist/<?= $playlist->{id} ?></link>
    <description>Podcast generated by ListPod</description>
? for my $video ( @{ $playlist->{videos} } ) {
    <item>
      <link><?= $base ?>playlist/<?= $playlist->{id} ?>#<?= $video->{id} ?></link>
      <title><?= $video->{title} ?></title>
      <enclosure url="<?= $base ?>video/<?= $video->{id} ?>.mp4" type="video/mp4" />
      <media:content url="<?= $base ?>video/<?= $video->{id} ?>.mp4" type="video/mp4"/>
    </item>
? }
  </channel>
</rss>
